overrides
**********

Documentation for the simul_efun-overrides api in */secure/simul_efun/overrides.c*.

Functions
=========
.. c:function:: string terminal_colour(string str, mapping m, int wrap, int indent)

Override of efun to avoid some driver issues.


.. c:function:: nomask varargs void ed(string file, mixed func)

The ed() efun is not used by the LIMA mudlib, as we use the new ed
functionality.  See ed_session.c


.. c:function:: nomask varargs void message(mixed msgclass, string message, mixed target, mixed exclude)

The message() efun is not used by the LIMA mudlib, as we use M_MESSAGES
for all messages sent to users.  See M_MESSAGES documentation.


.. c:function:: nomask int exec(object target, object src)

The exec efun is never used by the LIMA mudlib, since only bodies are
reconnected.


.. c:function:: nomask string debug_info(int operation, object ob)

The debug_info efun is temporarily denied, until the driver is altered
to use the valid_bind() apply.


.. c:function:: nomask varargs int input_to()

input_to should not be used; the stackable input system should be used
instead.  See the modal_push() and modal_func() routines.


.. c:function:: nomask object find_player(string str)

find_body() and find_user() are used to find the body and connection objects,
respectively.


.. c:function:: nomask object this_player(string str)

this_body() and this_user() are used to find the body and connection objects,
respectively.


.. c:function:: nomask varargs void destruct(object ob, mixed arg)

The destruct simul_efun guarantees that an object will always have remove()
called in it if it is destructed by another object.  destruct() with no
arguments destructs this_object WITHOUT calling remove, which is the
correct way to destruct an object from within a remove() function.
destruct() can also be passed an optional second arg, which is passed
to the remove() routine.  The update command passes 1 as the second
argument to indicate that a new copy will be reloaded immediately.


.. c:function:: nomask void shutdown()

The shutdown simul exists to prevent anything less than priv 1 from shutting
down the mud.


.. c:function:: nomask object query_snoop(object ob)

The query_snoop efun makes no sense in the context of our snoop system.


.. c:function:: nomask object query_snooping(object ob)

The query_snooping efun makes no sense in the context of our snoop system.


.. c:function:: void say(string m)

The say() efun is not used by the LIMA mudlib, in favour of the extensive
messaging system in the body.  Consider using this_body()->other_action()
instead of say().



*File generated by Lima 1.1a4 reStructured Text daemon.*
