Mudlib *hit_points*
********************

Documentation for the health-hit_points functions for the mudlib in */std/adversary/health/hit_points.c*.

Functions
=========
.. c:function:: void set_max_health(int x)

void set_max_health(int x);
Set the maximum number of hit points of a monster, and also set it's
hit points to the new max.


.. c:function:: void kill_us()

void kill_us()
Call this function to kill an adversary completely.


.. c:function:: void set_health(int x)

void set_health(int x);
Set the hit points of a monster.  Usually, you want to use heal_us() or
set_max_health instead.
see also: set_max_health


.. c:function:: varargs int hurt_us(int x, string unused)

varargs int hurt_us(int x, string unused);
Hurt us a specified amount.


.. c:function:: void heal_us(int x)

void heal_us(int x);
Heal us a specified amount, truncating at max_health.


.. c:function:: void reincarnate()

void reincarnate();
Makes us alive again!


.. c:function:: void update_health()

Correct the health if necessary


.. c:function:: varargs int query_health(string unused)

varargs int query_health(string unused);
Find the current number of hitpoints of a monster


.. c:function:: int query_max_health()

int query_max_health();
Find the maximum number of hitpoints of a monster.


.. c:function:: void heal_all()

void heal_all();
Heal us completely.


.. c:function:: string badly_wounded()

Returns 1 if we're nearing death.



*File generated by Lima 1.1a4 reStructured Text daemon.*
