Mudlib *flags*
***************

Documentation for the object-flags functions for the mudlib in */std/object/flags.c*.

Functions
=========
.. c:function:: nomask int get_flags(int set_key)


get_flags(set_key) returns the flags associated with the key 'set_key'
Any 'get' function for the flag set is also used.


.. c:function:: void set_flags(int which, int state)


set_flags(which, state) sets the flag specified by 'which', which includes
both flag set and information about which bit, to 1 if state is nonzero
and 0 if state is zero.  The secure, set, and change functions are also
called.


.. c:function:: varargs nomask void configure_set(int set_key, int is_non_persistent, function change_func)

configure_set allows one to specify whether a flag set is persistent,
and a function that can be called when a flag changes.


.. c:function:: nomask int test_flag(int which)


test_flag(which) returns 1 if a flag is set, and zero if not.  'which'
includes information both about which flag set and which bit.


.. c:function:: nomask void set_flag(int which)


set_flag(which) sets a given flag to 1.  'which'
includes information both about which flag set and which bit.


.. c:function:: nomask void clear_flag(int which)


clear_flag(which) sets a given flag to 0.  'which'
includes information both about which flag set and which bit.


.. c:function:: nomask void assign_flag(int which, int state)


assign_flag(which, state) sets a given flag to 1 if state is
nonzero and 0 if state is zero.  'which' includes information
both about which flag set and which bit.



*File generated by Lima 1.1a4 reStructured Text daemon.*
